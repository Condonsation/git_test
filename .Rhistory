git config --global user.email "gcondon@sandiego.edu"
git config --global user.email "gcondon@sandiego.edu"
git config --global user.name "Gannon Condon"
print("This file was created within RStudio")
print("And now it lives on GitHub")
git config --global user.email "gcondon@sandiego.edu"
##New code
v <- c(1:20)
zip_codes <- read.csv("https://raw.githubusercontent.com/stanleywtlim/gannonproject/data/Store_Zip%20locations.csv?token=AQYYCVO32ENTQZCYMWMFF5S7M3H52", header = TRUE)
View(zip_codes)
duplicated(zip_codes$STORE.NUMBER)
duplicated(zip_codes$STORE.NUMBER==TRUE)
duplicated(zip_codes$STORE.NUMBER)
zip_codes$duplicate <- duplicated(zip_codes$STORE.NUMBER)
View(zip_codes)
zip_codes$duplicate == TRUE
summary(zip_codes)
dim(zip_codes)
zip_codes$duplicate <- NULL
View(zip_codes)
View(zip_codes)
View(zip_codes)
View(zip_codes)
View(zip_codes)
View(zip_codes)
zip_codes <- read.csv("E:\Grocery Chain project\usazipcode-county.csv", header = TRUE)
zip_codes <- read.csv(E:\Grocery Chain project\usazipcode-county.csv, header = TRUE)
zip_county <- read.csv(file.path("E:\Grocery Chain project", "usazipcode-county.csv"))
zip_county <- read.csv(file.path("E:", "usazipcode-county.csv"))
zip_county <- read.csv(file.path("E:", "Grocery Chain project\usazipcode-county.csv"))
setwd("E:/Grocery Chain project")
elements <- read.csv(file.path("E:", "usazipcode-county.csv"))
elements <- read.csv(file.path("usazipcode-county.csv"))
View(elements)
View(elements)
View(zip_codes)
View(elements)
zip_county <- read.csv(file.path("usazipcode-county.csv")) ##bringing in zip-pcounty table
rm(elements)
View(zip_codes)
View(zip_county)
zip_county <- tbl_df(zip_county)
library(dplyr)
zip_county <- tbl_df(zip_county)
View(zip_county)
zip_county
zip_codes <- tbl_df(zip_codes) ##call dplyr function for easier sorting
zip_codes
zip_county
View(zip_codes)
View(zip_county)
View(zip_codes)
View(zip_county)
zip_county = rename(zip_county, ZIPCODE = zip)
zip_county = rename(zip_county, ZIPCODE = zip)
View(zip_county)
View(zip_codes)
View(zip_county)
##Run left join on tables
zip_merge <- merge(x = zip_codes, y = zip_county, by = "ZIPCODE", all.x = TRUE)
View(zip_merge)
View(zip_county)
summary(zip_merge)
is.na(zip_merge)
print(is.na(zip_merge))
sum(is.na(zip_merge))
View(zip_merge)
summary(zip_merge)
summary(zip_merge$Zipcode.name)
summary(zip_merge$State)
summary(zip_merge$State > 0)
table(zip_merge)
table(zip_merge$State)
View(zip_merge)
zip_merge %>% filter(State == FL)
zip_merge %>% filter(State == "FL"")
zip_merge %>% filter(State == "FL")
View(zip_codes)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
##Import FIPS coding to figure out needed CBG dfs
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes.csv")
View(cbg_fips_codes)
table(zip_merge$State)##Store locations in AL, FL, GA, LA, MS, NC, SC, & TN
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
View(cbg_fips_codes)
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
View(cbg_fips_codes)
toupper(cbg_fips_codes$County)
View(cbg_fips_codes)
cbg_fips_codes <- toupper(cbg_fips_codes$County)
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
View(cbg_fips_codes)
##left join zip code and county info with fips coding info
zip_merge = rename(zip_merge, County = County.Name)
View(zip_merge)
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_codes, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
zip_merge2
View(zip_merge)
cbg_fips_upper <- toupper(cbg_fips_codes$County)
View(cbg_fips_codes)
rm(cbg_fips_upper)
cbg_fips_codes$County <- toupper(cbg_fips_codes$County)
View(cbg_fips_codes)
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_codes, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
zip_merge2
summary(zip_merge2$state_fips)
tail(zip_merge2)
View(zip_merge)
View(zip_merge2)
cbg_fips_filterd <- cbg_fips_codes %>% filter(State == c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
cbg_fips_filterd <- cbg_fips_codes %>% filter(state == c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
cbg_fips_filterd <- cbg_fips_codes %>% filter(state == "AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN")
cbg_fips_filterd <- cbg_fips_codes %>% filter(state %in% c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
View(cbg_fips_filterd)
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
zip_merge2
View(zip_merge2)
summary(zip_merge$County)
View(zip_codes)
unique(zip_codes$ZIPCODE)
unique(zip_codes$ZIPCODE) == TRUE
length(unique(zip_codes$ZIPCODE))
sort(zip_codes$ZIPCODE)
cbg_fips_filterd <- cbg_fips_codes %>% filter(state %in% c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
cbg_fips_filterd$state <- NULL
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
zip_merge2
View(zip_merge2)
zip_merge2 <- unique(zip_merge2$STORE.NUMBER)
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
zip_merge2
unique(zip_merge2$STORE.NUMBER)
cbg_fips_filterd <- cbg_fips_codes %>% filter(state %in% c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
View(cbg_fips_filterd)
#cbg_fips_filterd$state <- NULL
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
zip_merge2
View(zip_merge2)
length(zip_merge2$State==zip_merge2$state)
length(unique(zip_merge2$STORE.NUMBER))
distinct(zip_merge2, State == state)
distinct(zip_merge2, STORE.NUMBER)
distinct(zip_merge2, STORE.NUMBER, .keep_all = TRUE)
zip_merge2 <- distinct(zip_merge2, STORE.NUMBER, .keep_all = TRUE)
View(zip_merge2)
#cbg_fips_filterd$state <- NULL
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
View(zip_merge2)
filter(zip_merge2, State == state)
View(zip_merge2)
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
View(cbg_fips_filterd)
View(cbg_fips_codes)
cbg_fips_filterd <- cbg_fips_codes %>% filter(state %in% c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
View(cbg_fips_filterd)
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
View(cbg_fips_codes)
cbg_fips_filterd <- cbg_fips_codes %>% filter(state %in% c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
View(cbg_fips_filterd)
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
View(cbg_fips_codes)
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
##left join zip code and county info with fips coding info
zip_merge = rename(zip_merge, County = County.Name)
View(cbg_fips_codes)
cbg_fips_codes$County <- toupper(cbg_fips_codes$County)
cbg_fips_filterd <- cbg_fips_codes %>% filter(state %in% c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
#cbg_fips_filterd$state <- NULL
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
View(zip_merge2)
SUMMARY(zip_merge2)
summary(zip_merge2)
zip_merge2$X6 <- NULL
zip_merge2$X7 <- NULL
##Import FIPS coding to figure out needed CBG dfs by state and county coding
cbg_fips_codes <- read_csv("safegraph_open_census_data/metadata/cbg_fips_codes (county removed).csv")
cbg_fips_codes$County <- toupper(cbg_fips_codes$County)
cbg_fips_filterd <- cbg_fips_codes %>% filter(state %in% c("AL", "FL", "GA", "LA", "MS", "NC", "SC", "TN"))
#cbg_fips_filterd$state <- NULL
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE)
zip_merge2 <- tbl_df(zip_merge2)
summary(zip_merge2)
View(zip_merge2)
zip_merge2$X6 <- NULL
zip_merge2$X7 <- NULL
View(zip_merge2)
##NOTES##
##Filter gets rid of NA rows as well. NA's exist due to differences in spelling across tables
filter(zip_merge2, State == state)
##Filter out repeat
distinct(zip_merge2, STORE.NUMBER, .keep_all = TRUE)
##Filter out repeat
distinct(zip_merge2, STORE.NUMBER, .keep_all = TRUE) & zip_merge2$State == zip_merge2$state
##NOTES##
##Filter gets rid of NA rows as well. NA's exist due to differences in spelling across tables
filter(zip_merge2, State == state)
zip_merge2$State != zip_merge2$state
length(zip_merge2$State != zip_merge2$state)
length(zip_merge2$State == zip_merge2$state)
##NOTES##
##Filter gets rid of NA rows as well. NA's exist due to differences in spelling across tables
subset(zip_merge2, State == state)
##NOTES##
##Filter gets rid of NA rows as well. NA's exist due to differences in spelling across tables
subset(zip_merge2, State != state)
View(zip_merge2)
View(cbg_fips_filterd)
summary(zip_merge2)
##NOTES##
##Filter gets rid of NA rows as well. NA's exist due to differences in spelling across tables
subset(zip_merge2, distinct(STORE.NUMBER))
##NOTES##
##Filter gets rid of NA rows as well. NA's exist due to differences in spelling across tables
subset(zip_merge2, distinct(zip_merge2$STORE.NUMBER))
filter(zip_merge2$State==zip_merge2$state)
filter(zip_merge2, State == state)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, distinct(zip_merge2$STORE.NUMBER))
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State == state)
summary(zip_merge2)
View(zip_merge2)
head(zip_merge2,20)
View(zip_merge2)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State == state)
##Filter out repeat
distinct(zip_merge2, STORE.NUMBER, .keep_all = TRUE)
##Filter out repeat
hand_sort <- distinct(zip_merge2, STORE.NUMBER, .keep_all = TRUE)
View(hand_sort)
rm(hand_sort)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
test <- subset(zip_merge2, State == state)
##Filter out repeat
test <- distinct(zip_merge2, STORE.NUMBER, .keep_all = TRUE)
subset(test, State != state)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State == state)
View(zip_merge2)
View(zip_merge)
View(zip_merge2)
View(test)
summary(zip_merge2)
names(zip_merge2)
str(zip_merge2)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State == as.factor(state))
as.factor(zip_merge2$state)
str(zip_merge2)
zip_merge2$state <- as.factor(zip_merge2$state)
View(cbg_fips_filterd)
View(zip_merge2)
summary(cbg_fips_filterd)
str(cbg_fips_filterd)
View(cbg_fips_filterd)
View(zip_merge2)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State == state, distinct(STORE.NUMBER))
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State == state)
str(zip_merge2)
str(zip_merge)
zip_merge2$state <- as.character(zip_merge2$state)
zip_merge2$State <- as.character(zip_merge2$State)
str(zip_merge2)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State == state)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State != state)
View(zip_merge)
summary(zip_merge)
str(zip_merge)
str(cbg_fips_filterd)
zip_merge$County <- as.character(zip_merge$County)
#cbg_fips_filterd$state <- NULL
zip_merge2 <- merge(x = zip_merge, y = cbg_fips_filterd, by = "County", all.x = TRUE) ##NOT CORRECT##
zip_merge2 <- tbl_df(zip_merge2)
summary(zip_merge)
str(cbg_fips_filterd)
str(zip_merge2)
##NOTES## MISSING 14 values after filtering. Something wrong with the merge
subset(zip_merge2, State != state)
